//
// Generated file, do not edit! Created by nedtool 5.7 from veins/pqcdsa/IcaSpdu.msg.
//

#ifndef __ICASPDU_M_H
#define __ICASPDU_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0507
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef VEINS_API
#  if defined(VEINS_EXPORT)
#    define VEINS_API  OPP_DLLEXPORT
#  elif defined(VEINS_IMPORT)
#    define VEINS_API  OPP_DLLIMPORT
#  else
#    define VEINS_API
#  endif
#endif



class IcaSpdu;
#include "IcaWarn_m.h" // import IcaWarn

#include "Certificate_m.h" // import Certificate

/**
 * Class generated from <tt>veins/pqcdsa/IcaSpdu.msg:5</tt> by nedtool.
 * <pre>
 * packet IcaSpdu extends cPacket
 * {
 *     IcaWarn warn;        // the ICA payload
 *     uint8_t signature[]; // PQC signature bytes
 *     Certificate cert;      // RSU certificate
 * }
 * </pre>
 */
class VEINS_API IcaSpdu : public ::omnetpp::cPacket
{
  protected:
    IcaWarn warn;
    uint8_t *signature = nullptr;
    size_t signature_arraysize = 0;
    Certificate cert;

  private:
    void copy(const IcaSpdu& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const IcaSpdu&);

  public:
    IcaSpdu(const char *name=nullptr, short kind=0);
    IcaSpdu(const IcaSpdu& other);
    virtual ~IcaSpdu();
    IcaSpdu& operator=(const IcaSpdu& other);
    virtual IcaSpdu *dup() const override {return new IcaSpdu(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const IcaWarn& getWarn() const;
    virtual IcaWarn& getWarnForUpdate() { return const_cast<IcaWarn&>(const_cast<IcaSpdu*>(this)->getWarn());}
    virtual void setWarn(const IcaWarn& warn);
    virtual void setSignatureArraySize(size_t size);
    virtual size_t getSignatureArraySize() const;
    virtual uint8_t getSignature(size_t k) const;
    virtual void setSignature(size_t k, uint8_t signature);
    virtual void insertSignature(uint8_t signature);
    virtual void insertSignature(size_t k, uint8_t signature);
    virtual void eraseSignature(size_t k);
    virtual const Certificate& getCert() const;
    virtual Certificate& getCertForUpdate() { return const_cast<Certificate&>(const_cast<IcaSpdu*>(this)->getCert());}
    virtual void setCert(const Certificate& cert);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const IcaSpdu& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, IcaSpdu& obj) {obj.parsimUnpack(b);}

#endif // ifndef __ICASPDU_M_H

